#imports:
#    - { resource: redis.yaml}
# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/'
#        exclude:
#            - '../src/DependencyInjection/'
#            - '../src/Entity/'
#            - '../src/Kernel.php'

    Predis\Client:
        arguments:
          - '%env(DATABASE_URL)%'

    App\Common\Signature\Auth:
        arguments:
            - '%env(SIGNATURE)%'

    App\Infrastructure\Database\Redis\RedisClient:
        arguments:
            - '@Predis\Client'

    App\Repository\UserRepository:
        arguments:
            - '@App\Infrastructure\Database\Redis\RedisClient'

    App\Controller\UserController:
        arguments:
            - '@App\Common\Services\UserProcessingFactory'

    App\Action\User\SetActions:
        arguments:
            - '@App\Repository\UserRepository'
        tags:
            - { name: action_factory, controller: user, action: set }

    App\Processing\User\SetProcessing:
        arguments:
            - '@App\Common\Signature\Auth'
            - '@App\Common\Services\ActionFactory'

    App\Common\Services\ActionFactory: ~

#    app.processing.exception_decorator_set_processing:
    App\Processing\ExceptionDecorator:
        decorates: App\Processing\User\SetProcessing
        decoration_priority: 50
        arguments:
            - '@App\Processing\ExceptionDecorator.inner'
#
##    app.processing.logger_decorator_set_processing:
    App\Processing\LoggerDecorator:
        decorates: App\Processing\User\SetProcessing
        decoration_priority: 100
        arguments:
            - '@App\Processing\LoggerDecorator.inner'

    App\Common\Services\UserProcessingFactory:
        calls:
            - [ 'addProcessing', [ !php/const App\Action\ActionInterface::SET_ACTION, '@App\Processing\User\SetProcessing' ] ]


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
